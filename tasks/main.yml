---
- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Ensure SSH daemon is running"
  service:
    name: "{{ ssh_daemon }}"
    state: started

- name: "Generate Host keys"
  block:
    - name: "Generating RSA host key"
      command: ssh-keygen -q -t rsa -f /etc/ssh/ssh_host_rsa_key -C "" -N ""
      args:
        creates: /etc/ssh/ssh_host_rsa_key

    - name: "Generating DSA host key"
      command: ssh-keygen -q -t dsa -f /etc/ssh/ssh_host_dsa_key -C "" -N ""
      args:
        creates: /etc/ssh/ssh_host_dsa_key

    - name: "Generating ECDSA host key"
      command: ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -C "" -N ""
      args:
        creates: /etc/ssh/ssh_host_ecdsa_key

- name: "Collect SHA256 hash of sshd_config file"
  stat:
    path: "{{ sshd_config }}"
  register: config_file

- name: "Deploy default SSH configuration file"
  block:
    - name: "Deploy original SSH configuration file (RHEL7)"
      template:
        src: sshd_config_rhel7.j2
        dest: "{{ sshd_config }}"
      notify: "Restart SSH Daemon"
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version >= '7' and config_file.stat.checksum != "86eb7bfb84dfe487161ac349fbea02a9c2c80de4e7bb9ca4148568924723a4b5"

- name: "Update SSH configuration to be more secure"
  lineinfile:
    dest: "{{ sshd_config }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: 'sshd -T -f %s'
    mode: 0644
    #backup: yes
  with_items:
    - regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication {{ password_authentication }}"
    - regexp: "^PubkeyAuthentication"
      line: "PubkeyAuthentication {{ public_key_authentication }}"
    - regexp: "^PermitRootLogin"
      line: "PermitRootLogin {{ permit_root_login }}"
    - regexp: "^Port"
      line: "Port {{ ssh_port }}"
    - regexp: "^UseDNS"
      line: "UseDNS {{ use_dns }}"
    - regexp: "^IgnoreRhosts"
      line: "IgnoreRhosts {{ ignore_rhosts }}"
    - regexp: "^PermitEmptyPasswords"
      line: "PermitEmptyPasswords {{ permit_empty_password }}"
    - regexp: "^ChallengeResponseAuthentication"
      line: "ChallengeResponseAuthentication {{ challenge_response_auth }}"
    - regexp: "^GSSAPIAuthentication"
      line: "GSSAPIAuthentication {{ gss_api_authentication }}"
    - regexp: "^X11Forwarding"
      line: "X11Forwarding {{ x11_forwarding }}"
    - regexp: "^ClientAliveInterval"
      line: "ClientAliveInterval {{ client_alive_int }}"
    - regexp: "^ClientAliveCountMax"
      line: "ClientAliveCountMax {{ client_alive_max }}"
    - regexp: "^LoginGraceTime"
      line: "LoginGraceTime {{ login_grace_time }}"
    - regexp: "^MaxAuthTries"
      line: "MaxAuthTries {{ max_auth_tries }}"
  notify: "Restart SSH Daemon"

- name: "Check for issue.j2 template file"
  stat:
    path: "{{ role_path }}/templates/issue.j2"
  delegate_to: localhost
  register: issue_template

- name: "Configure Login Banners"
  block:
    - name: "Configure Console Login Banner"
      template:
        src: issue.j2
        dest: "{{ banner_console }}"

    - name: "Configure Remote Login Banner"
      template:
        src: issue.j2
        dest: "{{ banner_remote }}"

    - name: "Update SSH configuration to include Login Banners"
      lineinfile:
        dest: "{{ sshd_config }}"
        regexp: "^Banner"
        line: "Banner {{ banner_remote }}"
        state: present
        validate: 'sshd -T -f %s'
        mode: 0644
      notify: "Restart SSH Daemon"
  when: issue_template.stat.exists

- name: "Define KexAlgorithms, Ciphers & MAC's... based on distribution version"
  block:
    - name: "Define KexAlgorithms, Ciphers & MAC's (RHEL 7)"
      set_fact:
        kex_algorithms: "curve25519-sha256@libssh.org"
        ciphers: "aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com"
        macs: "hmac-ripemd160,hmac-ripemd160-etm@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128@openssh.com,umac-128-etm@openssh.com"
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version >= '7'

- name: "Update KexAlgorithms, Ciphers & MAC's in SSH configuration"
  lineinfile:
    dest: "{{ sshd_config }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: 'sshd -T -f %s'
    mode: 0644
  with_items:
    - regexp: "^KexAlgorithms"
      line: "KexAlgorithms {{ kex_algorithms }}"
    - regexp: "^Ciphers"
      line: "Ciphers {{ ciphers }}"
    - regexp: "^MACs"
      line: "MACs {{ macs }}"
  notify: "Restart SSH Daemon"