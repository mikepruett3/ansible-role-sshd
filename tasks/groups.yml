- name: "Check for groups existence"
  ansible.builtin.shell:
    cmd: getent group "{{ ssh_group }}"
  ignore_errors: true
  register: result
  when:
    - ssh_group is defined

- name: "Set fact for Group if exist (true)"
  ansible.builtin.set_fact:
    group_exists: true
  when:
    - result.rc == 0

- name: "Set fact for Group if exist (false)"
  ansible.builtin.set_fact:
    group_exists: false
  when:
    - result.rc != 0

- name: "Check if AllowGroups config exists in sshd_config"
  ansible.builtin.shell:
    cmd: cat {{ sshd_config }} | grep AllowGroups | cut -d ' ' -f 2-
  #ignore_errors: true
  register: result
  when:
    - group_exists | bool

- name: "Set fact for AllowedGroups"
  ansible.builtin.set_fact:
    allowed_groups: "{{ result.stdout }}"
  when:
    - result.rc == 0

- name: "Add group to AllowGroups in SSH configuration"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config }}"
    regexp: '^AllowGroups.'
    line: 'AllowGroups {{ ssh_group }}'
    state: present
    validate: 'sshd -T -f %s'
    mode: '0600'
  when:
    - allowed_groups is not defined
    - ssh_group is not search(" ")

- name: "Add group to AllowGroups in SSH configuration (spaces)"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config }}"
    regexp: '^AllowGroups.'
    line: 'AllowGroups "{{ ssh_group }}"'
    state: present
    validate: 'sshd -T -f %s'
    mode: '0600'
  when:
    - allowed_groups is not defined
    - ssh_group is search(" ")

- name: "Append group to AllowGroups in SSH configuration, if group found"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config }}"
    regexp: '^AllowGroups.'
    line: 'AllowGroups {{ allowed_groups }} {{ ssh_group }}'
    state: present
    validate: 'sshd -T -f %s'
    mode: '0600'
  when:
    - allowed_groups is defined
    - allowed_groups is not search(ssh_group)
    - ssh_group is not search(" ")

- name: "Append group to AllowGroups in SSH configuration, if group found (spaces)"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config }}"
    regexp: '^AllowGroups.'
    line: 'AllowGroups {{ allowed_groups }} "{{ ssh_group }}"'
    state: present
    validate: 'sshd -T -f %s'
    mode: '0600'
  when:
    - allowed_groups is defined
    - allowed_groups is not search(ssh_group)
    - ssh_group is search(" ")

- name: "Restart SSH daemon"
  ansible.builtin.service:
    name: "{{ ssh_daemon }}"
    state: restarted
